name: CI/CD Pipeline for Odoo Project

on:
  push:
    branches:
      - main
    paths:
      - '**/*'
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    
    env:
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.23.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Create Dockerfile
        run: |
          cat << 'EOF' > Dockerfile
          FROM odoo:17.0
          
          USER root
          RUN apt-get update && apt-get install -y \
              python3-pip \
              build-essential \
              python3-dev \
              && rm -rf /var/lib/apt/lists/*
          
          COPY ./config/odoo.conf /etc/odoo/
          COPY ./addons /mnt/extra-addons/
          
          RUN chown -R odoo:odoo /etc/odoo/odoo.conf \
              && chown -R odoo:odoo /mnt/extra-addons
          
          USER odoo
          
          EXPOSE 8069 8071
          
          CMD ["odoo"]
          EOF

      - name: Create .env file
        run: |
          cat << EOF > .env
          POSTGRES_DB=${DB_NAME}
          POSTGRES_PASSWORD=${DB_PASSWORD}
          POSTGRES_USER=${DB_USER}
          PGDATA=/var/lib/postgresql/data/pgdata
          HOST=${DB_HOST}
          EOF

      - name: Create required directories and files
        run: |
          mkdir -p config addons
          cat << EOF > config/odoo.conf
          [options]
          addons_path = /mnt/extra-addons,/usr/lib/python3/dist-packages/odoo/addons
          db_host = ${DB_HOST}
          db_port = 32761
          db_user = ${DB_USER}
          db_password = ${DB_PASSWORD}
          db_name = ${DB_NAME}
          EOF

      - name: Create docker-compose.yml
        run: |
          cat << EOF > docker-compose.yml
          version: '3.8'
          
          services:
            odoo:
              image: nserweko/odoo:latest  # Updated to match your DockerHub repository
              env_file: .env
              ports:
                - "127.0.0.1:8069:8069"
              volumes:
                - odoo_data:/var/lib/odoo
                - ./config:/etc/odoo
                - ./addons:/mnt/extra-addons
              networks:
                - odoo_network
          
          volumes:
            odoo_data:
          
          networks:
            odoo_network:
              driver: bridge
          EOF

      - name: Build and tag Docker Image
        run: |
          docker build -t nserweko/odoo:${{ github.sha }} \
                      -t nserweko/odoo:latest .
          
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker Image
        if: github.ref == 'refs/heads/main'
        run: |
          docker push nserweko/odoo:${{ github.sha }}  # Push with the commit SHA
          docker push nserweko/odoo:latest            # Push the latest tag
